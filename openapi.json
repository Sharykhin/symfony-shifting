{
  "openapi": "3.0.0",
  "info": {
    "title": "Invoice aggregator service",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "users",
      "description": "Eveything about users"
    }
  ],
  "paths": {
    "/ping": {
      "get": {
        "summary": "Just a ping method",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "nullable": true
                    },
                    "warnings": {
                      "type": "object",
                      "nullable": true
                    },
                    "errors": {
                      "type": "object",
                      "nullable": true
                    },
                    "meta": {
                      "type": "object",
                      "nullable": true
                    }
                  },
                  "example": {
                    "result": {
                      "message": "pong"
                    },
                    "warnings": null,
                    "errors": null,
                    "meta": null
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Create a new user",
        "tags": [
          "users"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UserCreate"
        },
        "responses": {
          "201": {
            "description": "Success creation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/User"
                    },
                    "warnings": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "errors": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "meta": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed validation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "nullable": true
                    },
                    "warnings": {
                      "type": "object",
                      "nullable": true
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "first_name": {
                          "type": "string"
                        },
                        "last_name": {
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "nullable": true
                    }
                  },
                  "example": {
                    "result": null,
                    "warnings": null,
                    "errors": {
                      "email": "This value is not a valid email address.",
                      "first_name": "This value should not be blank.",
                      "last_name": "This value should not be blank."
                    },
                    "meta": null
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Return a specific user by its ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of user to return"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/User"
                    },
                    "warnings": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "errors": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "meta": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "requestBodies": {
      "UserCreate": {
        "description": "A JSON object containing pet information",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "john_mcclain@test.com"
                },
                "first_name": {
                  "type": "string",
                  "example": "John"
                },
                "last_name": {
                  "type": "string",
                  "example": "McClain"
                }
              },
              "required": [
                "email",
                "first_name",
                "last_name"
              ]
            }
          }
        }
      }
    },
    "schemas": {
      "User": {
        "description": "User definition",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "User ID",
            "example": 1
          },
          "full_name": {
            "type": "string",
            "description": "User full name",
            "example": "John McClain"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "john_mcclain@test.com"
          },
          "activated": {
            "type": "string",
            "description": "The datetime when user activated an account",
            "format": "date-time",
            "example": "2019-01-22T10:30:00Z"
          },
          "invoices": {
            "type": "integer",
            "description": "Number of user invoices",
            "example": 5
          },
          "amount": {
            "type": "number",
            "description": "Total amount of all the invoices",
            "format": "double",
            "example": 3045
          }
        }
      }
    }
  }
}